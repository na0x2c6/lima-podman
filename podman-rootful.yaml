images:
  - location: "https://github.com/lima-vm/alpine-lima/releases/download/v0.2.28/alpine-lima-std-3.18.0-x86_64.iso"
    arch: "x86_64"
    digest: "sha512:0f0c844d97a2a605cdaf0c4963d88ec8b7dca4ef50b6141c589102e65d7ddc47da9536a1cffe093f3fc7530236ce0ec2c24704475f500551afa6fc83bb6ddbe0"
  - location: "https://github.com/lima-vm/alpine-lima/releases/download/v0.2.28/alpine-lima-std-3.18.0-aarch64.iso"
    arch: "aarch64"
    digest: "sha512:a8deab1e1948af1f27f808e855ab2fe5022c3a10cd6e9bb0fe007915bc5e40fe68b81ca8de28d234a7d70938669eb30ca7cb8220eda329a2303d0434c8d79d64"

containerd:
  system: false
  user: false
provision:
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail

      apk add podman

  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail

      # For stability
      mkdir -p /etc/containers/containers.conf.d/
      if [[ -e /etc/containers/containers.conf.d/local.conf ]] ; then
        exit 0
      fi

      cat <<-EOF > /etc/containers/containers.conf.d/local.conf
      [engine]
      database_backend = "sqlite"
      EOF

  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail

      if grep -q 'start()' /etc/init.d/podman ; then
        exit 0
      fi

      cat <<-EOF >>/etc/init.d/podman
      start() {
        ebegin "Starting \${name}"
        supervise-daemon podman --start --signal USR1 --pidfile /run/\${RC_SVCNAME}.pid --user \${command_user} -- \${command} \${command_args}
        eend \$?
        while [ ! -e /run/podman/podman.sock ] ; do sleep 1 ; done
        chmod 777 /run/podman/podman.sock
      }
      EOF

  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail

      rc-service podman start
probes:
- script: |
    #!/bin/bash
    set -eux -o pipefail
    if ! timeout 30s bash -c "until command -v podman >/dev/null 2>&1; do sleep 3; done"; then
      echo >&2 "podman is not installed yet"
      exit 1
    fi
  hint: See "/var/log/cloud-init-output.log" in the guest
env:
  TMPDIR: /tmp
portForwards:
- guestSocket: "/run/podman/podman.sock"
  hostSocket: "{{.Dir}}/sock/podman.sock"
message: |
  To run `podman` on the host (assumes podman-remote is installed), run the following commands:
  ------
  podman system connection add lima-{{.Name}} "unix://{{.Dir}}/sock/podman.sock"
  podman system connection default lima-{{.Name}}
  podman{{if eq .HostOS "linux"}} --remote{{end}} run quay.io/podman/hello
  ------
